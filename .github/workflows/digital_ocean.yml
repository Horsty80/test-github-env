name: Deploy to Digital Ocean

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    paths:
      - "**/values.yaml"
    branches: [main]

env:
  REGISTRY: ghcr.io

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.filter.outputs.dev }}
      prod: ${{ steps.filter.outputs.prod }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dev:
              - '**/dev/values.yaml'
            prod:
              - '**/prod/values.yaml'

        # run only if some file in 'dev' folder was changed
      - name: Run a one-line script
        if: steps.filter.outputs.dev == 'true'
        run: echo This is dev stuff!

        # run only if some file in 'prod' folder was changed
      - name: Run a one-line script
        if: steps.filter.outputs.prod == 'true'
        run: echo This is prod stuff!
  # JOB to dev
  dev:
    needs: changes
    if: ${{ needs.changes.outputs.dev == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.value }}
    steps:
      # get repository code
      - uses: actions/checkout@v3
      #
      # Get path to modified values.yaml
      #
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/dev/values.yaml
      # check it's working
      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          echo '::set-output name=value::["a", "b", "c"]'
          echo "matrix=${{ steps.changed-files-specific.outputs.all_changed_files }}" >> $GITHUB_OUTPUT
      # Check with multiple files
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      #
      # Parse yaml to get value
      #
      - name: Get SDK Version from config
        id: parseYaml
        uses: mikefarah/yq@master
        with:
          cmd: yq '.components[0].version' single-web-app/dev/values.yaml
      - name: Run a one-line script
        if: needs.changes.outputs.dev == 'true'
        run: echo This is dev stuff! ${{ steps.parseYaml.outputs.result }}

  try_matrix:
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        value: ${{fromJson(needs.changes.outputs.matrix)}}
    steps:
      - run: |
          echo "${{ matrix.value }}"

  # JOB to prod
  prod:
    needs: changes
    if: ${{ needs.changes.outputs.prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-line script
        if: needs.changes.outputs.prod == 'true'
        run: echo This is prod stuff!
