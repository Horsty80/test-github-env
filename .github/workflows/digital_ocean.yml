name: Deploy to Digital Ocean

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    paths:
      - "**/values.yaml"
    branches: [main]

env:
  REGISTRY: ghcr.io

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      dev: ${{ steps.filter.outputs.dev }}
      prod: ${{ steps.filter.outputs.prod }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            dev:
              - '**/dev/values.yaml'
            prod:
              - '**/prod/values.yaml'

        # run only if some file in 'dev' folder was changed
      - name: Run a one-line script
        if: steps.filter.outputs.dev == 'true'
        run: echo This is dev stuff!

        # run only if some file in 'prod' folder was changed
      - name: Run a one-line script
        if: steps.filter.outputs.prod == 'true'
        run: echo This is prod stuff!

  changed-files:
    name: Get changes
    needs: changes
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tj-actions/changed-files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          json: true
          files: |
            **/dev/values.yaml
      - name: List all changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'
      - id: set-matrix
        run: echo "matrix={\"container\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"

  matrix-job:
    name: Run Matrix Job
    runs-on: ubuntu-latest
    needs: [changed-files]
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test
        run: |
          echo ${{ matrix.container }}

  # JOB to dev
  dev:
    needs: changes
    if: ${{ needs.changes.outputs.dev == 'true' }}
    runs-on: ubuntu-latest
    steps:
      # get repository code
      - uses: actions/checkout@v3
      #
      # Parse yaml to get value
      #
      - name: Get SDK Version from config
        id: parseYaml
        uses: mikefarah/yq@master
        with:
          cmd: yq '.components[0].version' single-web-app/dev/values.yaml
      - name: Run a one-line script
        if: needs.changes.outputs.dev == 'true'
        run: echo This is dev stuff! ${{ steps.parseYaml.outputs.result }}

  # JOB to prod
  prod:
    needs: changes
    if: ${{ needs.changes.outputs.prod == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-line script
        if: needs.changes.outputs.prod == 'true'
        run: echo This is prod stuff!
